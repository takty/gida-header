{"version":3,"sources":["fixed.js"],"names":["window","header_fixed","id","arguments","length","undefined","opts","CLS_ELM","CLS_ELM_TOP","CLS_STICKY","CLS_FLOATING","CLS_OFFSET","minWindowWidth","maxHeaderHeightRate","minSwitchingOffset","scrollPaddingOffset","elm","elmTop","isEnabled","cmsBarHeight","lastSwitchedY","origTop","offsetTop","initializeScrollPaddingTop","html","document","documentElement","getAttribute","setAttribute","MutationObserver","updateScrollPaddingTop","observe","attributes","setScrollPaddingTop","key","val","a","vs","Map","split","map","e","set","delete","Array","from","join","style","scrollPaddingTop","resizeListeners","scrollListeners","onResize","fn","doFirst","push","throttle","onScroll","isRunning","run","requestAnimationFrame","relativeOffsetTop","ancestor","target","getBoundingClientRect","top","getCmsBarHeight","parseFloat","getComputedStyle","marginTop","onResizeHandler","setEnabled","isStickable","adjustFloating","update","flag","classList","add","remove","getStaticTop","scrollY","height","setFloating","pageYOffset","setOffset","contains","Math","abs","origPos","position","innerWidth","innerHeight","clientHeight","addEventListener","l","passive","getElementById","getElementsByClassName"],"mappings":"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","file":"fixed.min.js","sourcesContent":["/**\n *\n * Gida Header - Fixed (JS)\n *\n * @author Takuto Yanagida\n * @version 2022-01-06\n *\n */\n\n\nwindow['GIDA'] = window['GIDA'] ?? {};\n\n\nwindow['GIDA'].header_fixed = function (id = null, opts = {}) {\n\tconst CLS_ELM     = 'gida-header';\n\tconst CLS_ELM_TOP = 'gida-header-top';\n\n\tconst CLS_STICKY   = 'sticky';\n\tconst CLS_FLOATING = 'floating';\n\tconst CLS_OFFSET   = 'offset';\n\n\tconst minWindowWidth      = opts['minWindowWidth']      ?? 600;\n\tconst maxHeaderHeightRate = opts['maxHeaderHeightRate'] ?? 0.2;\n\tconst minSwitchingOffset  = opts['minSwitchingOffset']  ?? 20;\n\tconst scrollPaddingOffset = opts['scrollPaddingOffset'] ?? 8;\n\n\tlet elm;\n\tlet elmTop;\n\n\tlet isEnabled     = false;\n\tlet cmsBarHeight  = 0;\n\tlet lastSwitchedY = 0;\n\tlet origTop       = 0;\n\tlet offsetTop     = 0;\n\n\n\t// -------------------------------------------------------------------------\n\n\n\t/**\n\t *\n\t * Scroll Padding Top\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2022-01-06\n\t *\n\t */\n\t\n\t\n\tfunction initializeScrollPaddingTop() {\n\t\tconst html = document.documentElement;\n\t\tif (html.getAttribute('data-scroll-padding-top') !== null) return;\n\t\thtml.setAttribute('data-scroll-padding-top', '');\n\t\n\t\tconst mo = new MutationObserver(updateScrollPaddingTop);\n\t\tmo.observe(html, { attributes: true });\n\t}\n\t\n\tfunction setScrollPaddingTop(key, val) {\n\t\tconst html = document.documentElement;\n\t\tconst a    = html.getAttribute('data-scroll-padding-top');\n\t\tconst vs   = a ? new Map(a.split(',').map(e => e.split(':'))) : new Map();\n\t\tif (val) {\n\t\t\tvs.set(key, val);\n\t\t} else {\n\t\t\tvs.delete(key);\n\t\t}\n\t\thtml.setAttribute('data-scroll-padding-top', Array.from(vs).map(e => e.join(':')).join(','));\n\t\tupdateScrollPaddingTop();\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction updateScrollPaddingTop() {\n\t\tconst html = document.documentElement;\n\t\tconst a    = html.getAttribute('data-scroll-padding-top');\n\t\tif (a === '') {\n\t\t\thtml.style.scrollPaddingTop = null;\n\t\t} else {\n\t\t\tconst vs = a.split(',').map(e => e.split(':')[1]);\n\t\t\thtml.style.scrollPaddingTop = `calc(${vs.join(' + ')})`;\n\t\t}\n\t}\n\t\n\t/**\n\t *\n\t * Common Functions (JS)\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-10-03\n\t *\n\t */\n\t\n\t\n\tconst resizeListeners = [];\n\tconst scrollListeners = [];\n\t\n\tfunction onResize(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tresizeListeners.push(throttle(fn));\n\t}\n\t\n\tfunction onScroll(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tscrollListeners.push(throttle(fn));\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\twindow.addEventListener('resize', () => { for (const l of resizeListeners) l(); }, { passive: true });\n\t\twindow.addEventListener('scroll', () => { for (const l of scrollListeners) l(); }, { passive: true });\n\t});\n\t\n\tfunction throttle(fn) {\n\t\tlet isRunning;\n\t\tfunction run() {\n\t\t\tisRunning = false;\n\t\t\tfn();\n\t\t}\n\t\treturn () => {\n\t\t\tif (isRunning) return;\n\t\t\tisRunning = true;\n\t\t\trequestAnimationFrame(run);\n\t\t};\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction relativeOffsetTop(ancestor, target) {\n\t\treturn target.getBoundingClientRect().top - ancestor.getBoundingClientRect().top;\n\t}\n\t\n\tfunction getCmsBarHeight() {\n\t\treturn parseFloat(getComputedStyle(document.documentElement).marginTop);\n\t}\n\t\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\tinitializeScrollPaddingTop();\n\n\t\telm = id ? document.getElementById(id) : document.getElementsByClassName(CLS_ELM)[0];\n\t\tif (!elm) return;\n\t\telmTop = elm.getElementsByClassName(CLS_ELM_TOP)[0] ?? elm;\n\n\t\tonResize(onResizeHandler, true);\n\t\tonScroll(update, true);\n\t});\n\n\tfunction onResizeHandler() {\n\t\tsetEnabled(isStickable());\n\t\tif (isEnabled) {\n\t\t\tcmsBarHeight = getCmsBarHeight();\n\t\t\tadjustFloating();\n\t\t\tupdate();\n\t\t}\n\t}\n\n\tfunction setEnabled(flag) {\n\t\tif (flag === isEnabled) return;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_STICKY);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_STICKY, CLS_FLOATING, CLS_OFFSET);\n\t\t\telm.style.top = null;\n\n\t\t\tsetScrollPaddingTop('gida-header', null);\n\t\t}\n\t\tisEnabled = flag;\n\t}\n\n\tfunction adjustFloating() {\n\t\torigTop = getStaticTop(elm) + window.scrollY;\n\t\telm.style.top = origTop + offsetTop + 'px';\n\n\t\tconst h = elm.getBoundingClientRect().height + origTop + offsetTop + scrollPaddingOffset;\n\t\tsetScrollPaddingTop('gida-header', h + 'px');\n\t}\n\n\tfunction update() {\n\t\tif (!isEnabled) return;\n\t\tsetFloating(window.pageYOffset !== 0);\n\t\tconst top = getStaticTop(elm) + relativeOffsetTop(elm, elmTop);\n\t\tsetOffset(top <= cmsBarHeight);\n\t}\n\n\tfunction setFloating(flag) {\n\t\tif (elm.classList.contains(CLS_FLOATING) === flag) return;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_FLOATING);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_FLOATING);\n\t\t}\n\t}\n\n\tfunction setOffset(flag) {\n\t\tif (elm.classList.contains(CLS_OFFSET) === flag) return;\n\t\tif (Math.abs(lastSwitchedY - window.scrollY) <= minSwitchingOffset) return;\n\t\tlastSwitchedY = window.scrollY;\n\n\t\toffsetTop = flag ? (-origTop + cmsBarHeight - relativeOffsetTop(elm, elmTop)) : 0;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_OFFSET);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_OFFSET);\n\t\t}\n\t\telm.style.top = origTop + offsetTop + 'px';\n\n\t\tconst h = elm.getBoundingClientRect().height + origTop + offsetTop + scrollPaddingOffset;\n\t\tsetScrollPaddingTop('gida-header', h + 'px');\n\t}\n\n\tfunction getStaticTop(elm) {\n\t\tconst origPos = elm.style.position;\n\t\telm.style.position = 'static';\n\t\tconst top = elm.getBoundingClientRect().top;\n\t\telm.style.position = origPos;\n\t\treturn top;\n\t}\n\n\n\t// Common ------------------------------------------------------------------\n\n\n\tfunction isStickable() {\n\t\tif (window.innerWidth < minWindowWidth) return false;\n\t\tif (window.innerHeight * maxHeaderHeightRate < elmTop.clientHeight) return false;\n\t\treturn true;\n\t}\n\n};\n"]}