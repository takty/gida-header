{"version":3,"sources":["fixed.js"],"names":["window","header_fixed","id","opts","CLS_STICKY","CLS_FLOATING","CLS_OFFSET","minWindowWidth","maxHeaderHeightRate","minSwitchingOffset","elm","elmTop","isEnabled","cmsBarHeight","lastSwitchedY","origTop","offsetTop","resizeListeners","scrollListeners","throttle","fn","isRunning","run","requestAnimationFrame","relativeOffsetTop","ancestor","target","getBoundingClientRect","top","onResizeHandler","flag","classList","add","remove","style","setEnabled","innerWidth","innerHeight","clientHeight","parseFloat","getComputedStyle","document","documentElement","marginTop","getStaticTop","scrollY","update","contains","setFloating","pageYOffset","Math","abs","setOffset","origPos","position","addEventListener","l","passive","getElementById","getElementsByClassName","doFirst","push","onResize","onScroll"],"mappings":"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","file":"fixed.min.js","sourcesContent":["/**\n *\n * Gida Header - Fixed (JS)\n *\n * @author Takuto Yanagida\n * @version 2021-10-04\n *\n */\n\n\nwindow['GIDA'] = window['GIDA'] ?? {};\n\n\nwindow['GIDA'].header_fixed = function (id = null, opts = {}) {\n\tconst CLS_ELM     = 'gida-header';\n\tconst CLS_ELM_TOP = 'gida-header-top';\n\n\tconst CLS_STICKY   = 'sticky';\n\tconst CLS_FLOATING = 'floating';\n\tconst CLS_OFFSET   = 'offset';\n\n\tconst minWindowWidth      = opts['minWindowWidth']      ?? 600;\n\tconst maxHeaderHeightRate = opts['maxHeaderHeightRate'] ?? 0.2;\n\tconst minSwitchingOffset  = opts['minSwitchingOffset']  ?? 20;\n\n\tlet elm;\n\tlet elmTop;\n\n\tlet isEnabled     = false;\n\tlet cmsBarHeight  = 0;\n\tlet lastSwitchedY = 0;\n\tlet origTop       = 0;\n\tlet offsetTop     = 0;\n\n\n\t// -------------------------------------------------------------------------\n\n\n\t/**\n\t *\n\t * Common Functions (JS)\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-10-03\n\t *\n\t */\n\t\n\t\n\tconst resizeListeners = [];\n\tconst scrollListeners = [];\n\t\n\tfunction onResize(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tresizeListeners.push(throttle(fn));\n\t}\n\t\n\tfunction onScroll(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tscrollListeners.push(throttle(fn));\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\twindow.addEventListener('resize', () => { for (const l of resizeListeners) l(); }, { passive: true });\n\t\twindow.addEventListener('scroll', () => { for (const l of scrollListeners) l(); }, { passive: true });\n\t});\n\t\n\tfunction throttle(fn) {\n\t\tlet isRunning;\n\t\tfunction run() {\n\t\t\tisRunning = false;\n\t\t\tfn();\n\t\t}\n\t\treturn () => {\n\t\t\tif (isRunning) return;\n\t\t\tisRunning = true;\n\t\t\trequestAnimationFrame(run);\n\t\t};\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction relativeOffsetTop(ancestor, target) {\n\t\treturn target.getBoundingClientRect().top - ancestor.getBoundingClientRect().top;\n\t}\n\t\n\tfunction getCmsBarHeight() {\n\t\treturn parseFloat(getComputedStyle(document.documentElement).marginTop);\n\t}\n\t\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\telm = id ? document.getElementById(id) : document.getElementsByClassName(CLS_ELM)[0];\n\t\tif (!elm) return;\n\t\telmTop = elm.getElementsByClassName(CLS_ELM_TOP)[0] ?? elm;\n\n\t\tonResize(onResizeHandler, true);\n\t\tonScroll(update, true);\n\t});\n\n\tfunction onResizeHandler() {\n\t\tsetEnabled(isStickable());\n\t\tif (isEnabled) {\n\t\t\tcmsBarHeight = getCmsBarHeight();\n\t\t\tadjustFloating();\n\t\t\tupdate();\n\t\t}\n\t}\n\n\tfunction setEnabled(flag) {\n\t\tif (flag === isEnabled) return;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_STICKY);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_STICKY, CLS_FLOATING, CLS_OFFSET);\n\t\t\telm.style.top = null;\n\t\t}\n\t\tisEnabled = flag;\n\t}\n\n\tfunction adjustFloating() {\n\t\torigTop = getStaticTop(elm) + window.scrollY;\n\t\telm.style.top = origTop + offsetTop + 'px';\n\t}\n\n\tfunction update() {\n\t\tif (!isEnabled) return;\n\t\tsetFloating(window.pageYOffset !== 0);\n\n\t\tconst top = getStaticTop(elm) + relativeOffsetTop(elm, elmTop);\n\t\tsetOffset(top <= cmsBarHeight);\n\t}\n\n\tfunction setFloating(flag) {\n\t\tif (elm.classList.contains(CLS_FLOATING) === flag) return;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_FLOATING);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_FLOATING);\n\t\t}\n\t}\n\n\tfunction setOffset(flag) {\n\t\tif (elm.classList.contains(CLS_OFFSET) === flag) return;\n\t\tif (Math.abs(lastSwitchedY - window.scrollY) <= minSwitchingOffset) return;\n\t\tlastSwitchedY = window.scrollY;\n\n\t\toffsetTop = flag ? (-origTop + cmsBarHeight - relativeOffsetTop(elm, elmTop)) : 0;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_OFFSET);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_OFFSET);\n\t\t}\n\t\telm.style.top = origTop + offsetTop + 'px';\n\t}\n\n\tfunction getStaticTop(elm) {\n\t\tconst origPos = elm.style.position;\n\t\telm.style.position = 'static';\n\t\tconst top = elm.getBoundingClientRect().top;\n\t\telm.style.position = origPos;\n\t\treturn top;\n\t}\n\n\n\t// Common ------------------------------------------------------------------\n\n\n\tfunction isStickable() {\n\t\tif (window.innerWidth < minWindowWidth) return false;\n\t\tif (window.innerHeight * maxHeaderHeightRate < elmTop.clientHeight) return false;\n\t\treturn true;\n\t}\n\n};\n"]}