{"version":3,"sources":["scroll.js"],"names":["window","header_scroll","id","opts","CLS_STICKY","CLS_FLOATING","minWindowWidth","maxHeaderHeightRate","minSwitchingOffset","elm","elmTop","isEnabled","cmsBarHeight","lastSwitchedY","resizeListeners","scrollListeners","throttle","fn","isRunning","run","requestAnimationFrame","onResizeHandler","flag","classList","add","remove","style","top","setEnabled","innerWidth","innerHeight","clientHeight","parseFloat","getComputedStyle","document","documentElement","marginTop","ancestor","target","getBoundingClientRect","adjustFloating","update","contains","Math","abs","scrollY","setFloating","floor","addEventListener","l","passive","getElementById","getElementsByClassName","doFirst","push","onResize","onScroll"],"mappings":"AAAA,aAUAA,OAAM,KAAWA,OAAM,MAAY,GAGnCA,OAAM,KAASC,cAAgB,SAAUC,EAAK,KAAMC,EAAO,IAC1D,MAGMC,EAAe,SACfC,EAAe,WAEfC,EAAsBH,EAAI,gBAA2B,IACrDI,EAAsBJ,EAAI,qBAA2B,GACrDK,EAAsBL,EAAI,oBAA2B,GAE3D,IAAIM,EACAC,EAEAC,GAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAgBpB,MAAMC,EAAkB,GAClBC,EAAkB,GAqBxB,SAASC,EAASC,GACjB,IAAIC,EACJ,SAASC,IACRD,GAAY,EACZD,IAED,MAAO,KACFC,IACJA,GAAY,EACZE,sBAAsBD,KA8BxB,SAASE,KAST,SAAoBC,GACnB,GAAIA,IAASX,EAAW,OACpBW,EACHb,EAAIc,UAAUC,IAAIpB,IAElBK,EAAIc,UAAUE,OAAOrB,EAAYC,GACjCI,EAAIiB,MAAMC,IAAM,MAEjBhB,EAAYW,EAhBZM,GA+CI5B,OAAO6B,WAAavB,GACpBN,OAAO8B,YAAcvB,EAAsBG,EAAOqB,eA/ClDpB,IACHC,EApBMoB,WAAWC,iBAAiBC,SAASC,iBAAiBC,WAqC9D,WACC,MAAMT,EAAMf,GA3CcyB,EA2CmB5B,EA3CT6B,EA2Cc5B,EA1C3C4B,EAAOC,wBAAwBZ,IAAMU,EAASE,wBAAwBZ,KAD9E,IAA2BU,EAAUC,EA4CpC7B,EAAIiB,MAAMC,IAAMA,EAAM,KAlBrBa,GACAC,KAoBF,SAASA,IACR,IAAK9B,EAAW,QAKjB,SAAqBW,GACpB,GAAIb,EAAIc,UAAUmB,SAASrC,KAAkBiB,EAAM,OACnD,GAAIqB,KAAKC,IAAI/B,EAAgBb,OAAO6C,UAAYrC,EAAoB,OACpEK,EAAgBb,OAAO6C,QAEnBvB,EACHb,EAAIc,UAAUC,IAAInB,GAElBI,EAAIc,UAAUE,OAAOpB,GAXtByC,CADYH,KAAKI,MAAMrC,EAAO6B,wBAAwBZ,MACnCf,GAxEpBsB,SAASc,iBAAiB,oBAAoB,KAC7ChD,OAAOgD,iBAAiB,UAAU,KAAQ,IAAK,MAAMC,KAAKnC,EAAiBmC,MAAQ,CAAEC,SAAS,IAC9FlD,OAAOgD,iBAAiB,UAAU,KAAQ,IAAK,MAAMC,KAAKlC,EAAiBkC,MAAQ,CAAEC,SAAS,OAiC/FhB,SAASc,iBAAiB,oBAAoB,WAC7CvC,EAAMP,EAAKgC,SAASiB,eAAejD,GAAMgC,SAASkB,uBApF/B,eAoF+D,GAC7E3C,IACLC,EAASD,EAAI2C,uBArFM,mBAqF8B,IAAM3C,EApDxD,SAAkBQ,EAAIoC,GAAU,GAC3BA,GAASpC,IACbH,EAAgBwC,KAAKtC,EAASC,IAoD9BsC,CAASlC,GAAiB,GAjD3B,SAAkBJ,EAAIoC,GAAU,GAC3BA,GAASpC,IACbF,EAAgBuC,KAAKtC,EAASC,IAgD9BuC,CAASf,GAAQ","file":"scroll.min.js","sourcesContent":["/**\n *\n * Gida Header - Scroll (JS)\n *\n * @author Takuto Yanagida\n * @version 2021-10-04\n *\n */\n\n\nwindow['GIDA'] = window['GIDA'] ?? {};\n\n\nwindow['GIDA'].header_scroll = function (id = null, opts = {}) {\n\tconst CLS_ELM     = 'gida-header';\n\tconst CLS_ELM_TOP = 'gida-header-top';\n\n\tconst CLS_STICKY   = 'sticky';\n\tconst CLS_FLOATING = 'floating';\n\n\tconst minWindowWidth      = opts['minWindowWidth']      ?? 600;\n\tconst maxHeaderHeightRate = opts['maxHeaderHeightRate'] ?? 0.2;\n\tconst minSwitchingOffset  = opts['minSwitchingOffset']  ?? 20;\n\n\tlet elm;\n\tlet elmTop;\n\n\tlet isEnabled     = false;\n\tlet cmsBarHeight  = 0;\n\tlet lastSwitchedY = 0;\n\n\n\t// -------------------------------------------------------------------------\n\n\n\t/**\n\t *\n\t * Common Functions (JS)\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-10-03\n\t *\n\t */\n\t\n\t\n\tconst resizeListeners = [];\n\tconst scrollListeners = [];\n\t\n\tfunction onResize(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tresizeListeners.push(throttle(fn));\n\t}\n\t\n\tfunction onScroll(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tscrollListeners.push(throttle(fn));\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\twindow.addEventListener('resize', () => { for (const l of resizeListeners) l(); }, { passive: true });\n\t\twindow.addEventListener('scroll', () => { for (const l of scrollListeners) l(); }, { passive: true });\n\t});\n\t\n\tfunction throttle(fn) {\n\t\tlet isRunning;\n\t\tfunction run() {\n\t\t\tisRunning = false;\n\t\t\tfn();\n\t\t}\n\t\treturn () => {\n\t\t\tif (isRunning) return;\n\t\t\tisRunning = true;\n\t\t\trequestAnimationFrame(run);\n\t\t};\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction relativeOffsetTop(ancestor, target) {\n\t\treturn target.getBoundingClientRect().top - ancestor.getBoundingClientRect().top;\n\t}\n\t\n\tfunction getCmsBarHeight() {\n\t\treturn parseFloat(getComputedStyle(document.documentElement).marginTop);\n\t}\n\t\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\telm = id ? document.getElementById(id) : document.getElementsByClassName(CLS_ELM)[0];\n\t\tif (!elm) return;\n\t\telmTop = elm.getElementsByClassName(CLS_ELM_TOP)[0] ?? elm;\n\n\t\tonResize(onResizeHandler, true);\n\t\tonScroll(update, true)\n\t});\n\n\tfunction onResizeHandler() {\n\t\tsetEnabled(isStickable());\n\t\tif (isEnabled) {\n\t\t\tcmsBarHeight = getCmsBarHeight();\n\t\t\tadjustFloating();\n\t\t\tupdate();\n\t\t}\n\t}\n\n\tfunction setEnabled(flag) {\n\t\tif (flag === isEnabled) return;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_STICKY);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_STICKY, CLS_FLOATING);\n\t\t\telm.style.top = null;\n\t\t}\n\t\tisEnabled = flag;\n\t}\n\n\tfunction adjustFloating() {\n\t\tconst top = cmsBarHeight - relativeOffsetTop(elm, elmTop);\n\t\telm.style.top = top + 'px';\n\t}\n\n\tfunction update() {\n\t\tif (!isEnabled) return;\n\t\tconst top = Math.floor(elmTop.getBoundingClientRect().top);\n\t\tsetFloating(top <= cmsBarHeight);\n\t}\n\n\tfunction setFloating(flag) {\n\t\tif (elm.classList.contains(CLS_FLOATING) === flag) return;\n\t\tif (Math.abs(lastSwitchedY - window.scrollY) <= minSwitchingOffset) return;\n\t\tlastSwitchedY = window.scrollY;\n\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_FLOATING);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_FLOATING);\n\t\t}\n\t}\n\n\n\t// Common ------------------------------------------------------------------\n\n\n\tfunction isStickable() {\n\t\tif (window.innerWidth < minWindowWidth) return false;\n\t\tif (window.innerHeight * maxHeaderHeightRate < elmTop.clientHeight) return false;\n\t\treturn true;\n\t}\n\n};\n"]}