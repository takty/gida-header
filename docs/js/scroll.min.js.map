{"version":3,"sources":["scroll.js"],"names":["window","header_scroll","id","arguments","length","undefined","opts","CLS_ELM","CLS_ELM_TOP","CLS_STICKY","CLS_FLOATING","minWindowWidth","maxHeaderHeightRate","minSwitchingOffset","minSwitchingTime","scrollPaddingOffset","elm","elmTop","isEnabled","cmsBarHeight","lastSwitchedY","lastSwitchedT","origMid","floatTop","vhd","isIos","navigator","userAgent","match","platform","maxTouchPoints","initializeScrollPaddingTop","html","document","documentElement","getAttribute","setAttribute","MutationObserver","updateScrollPaddingTop","observe","attributes","v","parseInt","getComputedStyle","scrollPaddingTop","setScrollPaddingTop","Number","isNaN","key","val","a","vs","Map","split","map","e","set","delete","Array","from","join","getScrollPaddingTop","without","filter","_ref","_ref2","k","reduce","b","style","resizeListeners","scrollListeners","onResize","fn","doFirst","push","throttle","onScroll","onLoad","readyState","addEventListener","setTimeout","isRunning","run","requestAnimationFrame","getStaticBoundingClientRect","origPos","position","r","getBoundingClientRect","remainingHeight","ancestor","target","top","getCmsBarHeight","parseFloat","marginTop","getViewHeightDifference","de","createElement","opacity","height","body","appendChild","clientHeight","removeChild","scrollToHash","hash","location","t","getElementById","substring","spt","scrollTo","pageYOffset","onResizeHandler","setEnabled","isStickable","adjustFloating","update","flag","classList","add","remove","rh","scrollY","Math","ceil","force","setFloating","contains","abs","performance","now","innerWidth","innerHeight","l","passive","getElementsByClassName"],"mappings":"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","file":"scroll.min.js","sourcesContent":["/**\n * Gida Header - Scroll\n *\n * @author Takuto Yanagida\n * @version 2022-07-27\n */\n\n\nwindow['GIDA'] = window['GIDA'] ?? {};\n\n\nwindow['GIDA'].header_scroll = function (id = null, opts = {}) {\n\tconst CLS_ELM     = 'gida-header';\n\tconst CLS_ELM_TOP = 'gida-header-top';\n\n\tconst CLS_STICKY   = 'sticky';\n\tconst CLS_FLOATING = 'floating';\n\n\tconst minWindowWidth      = opts['minWindowWidth']      ?? 600;\n\tconst maxHeaderHeightRate = opts['maxHeaderHeightRate'] ?? 0.2;\n\tconst minSwitchingOffset  = opts['minSwitchingOffset']  ?? 100;\n\tconst minSwitchingTime    = opts['minSwitchingTime']    ?? 200;\n\tconst scrollPaddingOffset = opts['scrollPaddingOffset'] ?? 8;\n\n\tlet elm;\n\tlet elmTop;\n\n\tlet isEnabled     = false;\n\tlet cmsBarHeight  = 0;\n\tlet lastSwitchedY = 0;\n\tlet lastSwitchedT = 0;\n\tlet origMid       = 0;\n\tlet floatTop      = 0;\n\n\tlet vhd     = 0;\n\tconst isIos = null !== navigator.userAgent.match(/iPad|iPhone|iPod/) || (navigator.platform === 'MacIntel' && 1 < navigator.maxTouchPoints);\n\n\n\t// -------------------------------------------------------------------------\n\n\n\t/**\n\t * Scroll Padding Top\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2022-01-07\n\t */\n\t\n\t\n\tfunction initializeScrollPaddingTop() {\n\t\tconst html = document.documentElement;\n\t\tif (html.getAttribute('data-scroll-padding-top') !== null) return;\n\t\thtml.setAttribute('data-scroll-padding-top', '');\n\t\n\t\tconst mo = new MutationObserver(updateScrollPaddingTop);\n\t\tmo.observe(html, { attributes: true });\n\t\n\t\tconst v = parseInt(getComputedStyle(html).scrollPaddingTop);\n\t\tsetScrollPaddingTop('default', Number.isNaN(v) ? 0 : v);\n\t}\n\t\n\tfunction setScrollPaddingTop(key, val) {\n\t\tconst html = document.documentElement;\n\t\tconst a    = html.getAttribute('data-scroll-padding-top');\n\t\tconst vs   = a ? new Map(a.split(',').map(e => e.split(':'))) : new Map();\n\t\tif (val) {\n\t\t\tvs.set(key, val);\n\t\t} else {\n\t\t\tvs.delete(key);\n\t\t}\n\t\thtml.setAttribute('data-scroll-padding-top', Array.from(vs).map(e => e.join(':')).join(','));\n\t\tupdateScrollPaddingTop();\n\t}\n\t\n\tfunction getScrollPaddingTop(without = null) {\n\t\tconst html = document.documentElement;\n\t\tconst a    = html.getAttribute('data-scroll-padding-top');\n\t\tif (!a) return 0;\n\t\n\t\tconst vs = a.split(',').map(e => e.split(':')).filter(([key,]) => key !== without).map(([k, v]) => parseInt(v));\n\t\treturn vs.reduce((a, b) => a + b, 0);\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction updateScrollPaddingTop() {\n\t\tconst html = document.documentElement;\n\t\thtml.style.scrollPaddingTop = getScrollPaddingTop() + 'px';\n\t}\n\t\n\t/**\n\t * Common Functions\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2022-07-27\n\t */\n\t\n\t\n\tconst resizeListeners = [];\n\tconst scrollListeners = [];\n\t\n\tfunction onResize(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tresizeListeners.push(throttle(fn));\n\t}\n\t\n\tfunction onScroll(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tscrollListeners.push(throttle(fn));\n\t}\n\t\n\tfunction onLoad(fn) {\n\t\tif ('loading' === document.readyState) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', fn);\n\t\t} else {\n\t\t\tsetTimeout(fn, 0);\n\t\t}\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tonLoad(() => {\n\t\twindow.addEventListener('resize', () => { for (const l of resizeListeners) l(); }, { passive: true });\n\t\twindow.addEventListener('scroll', () => { for (const l of scrollListeners) l(); }, { passive: true });\n\t});\n\t\n\tfunction throttle(fn) {\n\t\tlet isRunning;\n\t\tfunction run() {\n\t\t\tisRunning = false;\n\t\t\tfn();\n\t\t}\n\t\treturn () => {\n\t\t\tif (isRunning) return;\n\t\t\tisRunning = true;\n\t\t\trequestAnimationFrame(run);\n\t\t};\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction getStaticBoundingClientRect(elm) {\n\t\tconst origPos = elm.style.position;\n\t\telm.style.position = 'static';\n\t\tconst r = elm.getBoundingClientRect();\n\t\telm.style.position = origPos;\n\t\treturn r;\n\t}\n\t\n\tfunction remainingHeight(ancestor, target) {\n\t\treturn target.getBoundingClientRect().top - ancestor.getBoundingClientRect().top;\n\t}\n\t\n\tfunction getCmsBarHeight() {\n\t\treturn parseFloat(getComputedStyle(document.documentElement).marginTop);\n\t}\n\t\n\tfunction getViewHeightDifference() {\n\t\tconst de = document.createElement('div');\n\t\tde.style.opacity  = 0;\n\t\tde.style.position = 'absolute';\n\t\tde.style.height   = 'calc(100lvh - 100svh)';\n\t\tdocument.body.appendChild(de);\n\t\tconst vhd = de.clientHeight;\n\t\tdocument.body.removeChild(de);\n\t\treturn vhd;\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction scrollToHash() {\n\t\tconst hash = window.location.hash;\n\t\tif (!hash || hash.length < 2 || '#' !== hash[0]) return;\n\t\tconst t = document.getElementById(hash.substring(1));\n\t\tif (!t) return;\n\t\tsetTimeout(() => {\n\t\t\tconst spt = parseInt(document.documentElement.style.scrollPaddingTop, 10);\n\t\t\twindow.scrollTo(0, t.getBoundingClientRect().top + window.pageYOffset - spt);\n\t\t}, 0);\n\t}\n\t\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tonLoad(() => {\n\t\tinitializeScrollPaddingTop();\n\t\tvhd = isIos ? getViewHeightDifference() : 0;\n\n\t\telm = id ? document.getElementById(id) : document.getElementsByClassName(CLS_ELM)[0];\n\t\tif (!elm) return;\n\t\telmTop = elm.getElementsByClassName(CLS_ELM_TOP)[0] ?? elm;\n\n\t\tonResize(onResizeHandler, true);\n\t\tonScroll(update, true);\n\n\t\tscrollToHash();\n\t});\n\n\tfunction onResizeHandler() {\n\t\tsetEnabled(isStickable());\n\t\tif (isEnabled) {\n\t\t\tcmsBarHeight = getCmsBarHeight();\n\t\t\tadjustFloating();\n\t\t\tupdate(true);\n\t\t}\n\t}\n\n\tfunction setEnabled(flag) {\n\t\tif (flag === isEnabled) return;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_STICKY);\n\t\t\telm.style.position = 'sticky';\n\t\t} else {\n\t\t\telm.classList.remove(CLS_STICKY, CLS_FLOATING);\n\t\t\telm.style.position = null;\n\t\t\telm.style.top      = null;\n\n\t\t\tsetScrollPaddingTop('gida-header', null);\n\t\t}\n\t\tisEnabled = flag;\n\t}\n\n\tfunction adjustFloating() {\n\t\tconst r  = getStaticBoundingClientRect(elm);\n\t\tconst rh = remainingHeight(elm, elmTop);\n\n\t\torigMid  = r.top + window.scrollY + rh;\n\t\tfloatTop = Math.ceil(cmsBarHeight - rh);\n\t}\n\n\tfunction update(force = false) {\n\t\tif (!isEnabled) return;\n\t\tsetFloating(origMid <= window.scrollY + cmsBarHeight, force);\n\n\t\tsetTimeout(() => {\n\t\t\tconst po = Math.ceil(elm.getBoundingClientRect().height + floatTop + scrollPaddingOffset);\n\t\t\tsetScrollPaddingTop('gida-header', po + vhd);\n\t\t}, 0);\n\t}\n\n\tfunction setFloating(flag, force) {\n\t\tif (!force) {\n\t\t\tif (elm.classList.contains(CLS_FLOATING) === flag) return;\n\t\t\tif (Math.abs(lastSwitchedY - window.scrollY) <= minSwitchingOffset) return;\n\t\t\tlastSwitchedY = window.scrollY;\n\t\t\tif (Math.abs(lastSwitchedT - performance.now()) <= minSwitchingTime) return;\n\t\t\tlastSwitchedT = performance.now();\n\t\t}\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_FLOATING);\n\t\t\telm.style.top = floatTop + 'px';\n\t\t} else {\n\t\t\telm.classList.remove(CLS_FLOATING);\n\t\t\telm.style.top = null;\n\t\t}\n\t}\n\n\n\t// Common ------------------------------------------------------------------\n\n\n\tfunction isStickable() {\n\t\tif (window.innerWidth < minWindowWidth) return false;\n\t\tif (window.innerHeight * maxHeaderHeightRate < elmTop.clientHeight) return false;\n\t\treturn true;\n\t}\n\n};\n"]}