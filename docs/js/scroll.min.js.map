{"version":3,"sources":["scroll.js"],"names":["window","header_scroll","id","opts","CLS_STICKY","CLS_FLOATING","minWindowWidth","maxHeaderHeightRate","elm","elmTop","isEnabled","resizeListeners","scrollListeners","throttle","fn","isRunning","run","requestAnimationFrame","getWpAdminBarHeight","e","document","getElementById","getComputedStyle","position","offsetHeight","onResizeHandler","flag","classList","add","remove","style","top","setEnabled","innerWidth","innerHeight","clientHeight","ancestor","target","getBoundingClientRect","adjustFloating","update","contains","setFloating","Math","floor","addEventListener","l","passive","getElementsByClassName","doFirst","push","onResize","onScroll"],"mappings":"AAAA,aAUAA,OAAM,KAAWA,OAAM,MAAY,GAGnCA,OAAM,KAASC,cAAgB,SAAUC,EAAK,KAAMC,EAAO,IAC1D,MAGMC,EAAe,SACfC,EAAe,WAEfC,EAAsBH,EAAI,gBAA2B,IACrDI,EAAsBJ,EAAI,qBAA2B,GAE3D,IAAIK,EACAC,EAEAC,GAAa,EAgBjB,MAAMC,EAAkB,GAClBC,EAAkB,GA0ExB,SAASC,EAASC,GACjB,IAAIC,EACJ,SAASC,IACRD,GAAY,EACZD,IAED,MAAO,KACFC,IACJA,GAAY,EACZE,sBAAsBD,KAQxB,SAASE,IACR,MAAMC,EAAIC,SAASC,eAAe,cAClC,OAAQF,GAAsC,UAAjCG,iBAAiBH,GAAGI,SAAwBJ,EAAEK,aAAe,EAiB3E,SAASC,KAQT,SAAoBC,GACnB,GAAIA,IAAShB,EAAW,OACpBgB,EACHlB,EAAImB,UAAUC,IAAIxB,IAElBI,EAAImB,UAAUE,OAAOzB,EAAYC,GACjCG,EAAIsB,MAAMC,IAAM,MAEjBrB,EAAYgB,EAfZM,GA+CIhC,OAAOiC,WAAa3B,GACpBN,OAAOkC,YAAc3B,EAAsBE,EAAO0B,eA/ClDzB,KAiBL,WACC,MAAMqB,EAAMb,KAuBckB,EAvB4B5B,EAuBlB6B,EAvBuB5B,EAwBpD4B,EAAOC,wBAAwBP,IAAMK,EAASE,wBAAwBP,KAD9E,IAA2BK,EAAUC,EAtBpC7B,EAAIsB,MAAMC,IAAMA,EAAM,KAlBrBQ,GACAC,KAoBF,SAASA,IACR,IAAK9B,EAAW,QAKjB,SAAqBgB,GACpB,GAAIlB,EAAImB,UAAUc,SAASpC,KAAkBqB,EAAM,OAC/CA,EACHlB,EAAImB,UAAUC,IAAIvB,GAElBG,EAAImB,UAAUE,OAAOxB,GARtBqC,CADYC,KAAKC,MAAMnC,EAAO6B,wBAAwBP,MACnCb,KArEpBE,SAASyB,iBAAiB,oBAAoB,KAC7C7C,OAAO6C,iBAAiB,UAAU,KAAQ,IAAK,MAAMC,KAAKnC,EAAiBmC,MAAQ,CAAEC,SAAS,IAC9F/C,OAAO6C,iBAAiB,UAAU,KAAQ,IAAK,MAAMC,KAAKlC,EAAiBkC,MAAQ,CAAEC,SAAS,OA+B/F3B,SAASyB,iBAAiB,oBAAoB,WAC7CrC,EAASY,SAAS4B,uBAnIC,eAmI+B,GAClDvC,EAASW,SAAS4B,uBAnIC,mBAmImC,GACjDxC,GAAQC,IAtGd,SAAkBK,EAAImC,GAAU,GAC3BA,GAASnC,IACbH,EAAgBuC,KAAKrC,EAASC,IAsG9BqC,CAAS1B,GAAiB,GAnG3B,SAAkBX,EAAImC,GAAU,GAC3BA,GAASnC,IACbF,EAAgBsC,KAAKrC,EAASC,IAkG9BsC,CAASZ,GAAQ","file":"scroll.min.js","sourcesContent":["/**\n *\n * Gida Header - Scroll (JS)\n *\n * @author Takuto Yanagida\n * @version 2021-09-30\n *\n */\n\n\nwindow['GIDA'] = window['GIDA'] ?? {};\n\n\nwindow['GIDA'].header_scroll = function (id = null, opts = {}) {\n\tconst CLS_ELM     = 'gida-header';\n\tconst CLS_ELM_TOP = 'gida-header-top';\n\n\tconst CLS_STICKY   = 'sticky';\n\tconst CLS_FLOATING = 'floating';\n\n\tconst minWindowWidth      = opts['minWindowWidth']      ?? 600;\n\tconst maxHeaderHeightRate = opts['maxHeaderHeightRate'] ?? 0.2;\n\n\tlet elm;\n\tlet elmTop;\n\n\tlet isEnabled  = false;\n\n\n\t// -------------------------------------------------------------------------\n\n\n\t/**\n\t *\n\t * Common Functions (JS)\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-09-30\n\t *\n\t */\n\t\n\t\n\tconst resizeListeners = [];\n\tconst scrollListeners = [];\n\t\n\tfunction onResize(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tresizeListeners.push(throttle(fn));\n\t}\n\t\n\tfunction onScroll(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tscrollListeners.push(throttle(fn));\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\t// const scrollableDetectionTargets = [];\n\t\n\t// function addScrollableDetectionTarget(tar) {\n\t// \tscrollableDetectionTargets.push(tar);\n\t// }\n\t\n\t// function initializeScrollableDetection() {\n\t// \tconst rob = new ResizeObserver(oes => {\n\t// \t\tfor (const oe of oes) detectScrollable(oe.target);\n\t// \t});\n\t// \tfor (const tar of scrollableDetectionTargets) {\n\t// \t\trob.observe(tar);\n\t// \t\ttar.addEventListener('scroll', throttle(() => { detectScrollable(tar); }));\n\t// \t}\n\t// }\n\t\n\t// function detectScrollable(elm) {\n\t// \tif (elm.scrollWidth - elm.clientWidth > 2) {  // for avoiding needless scrolling\n\t// \t\tconst r = elm.scrollLeft / (elm.scrollWidth - elm.clientWidth);\n\t// \t\telm.classList[r < 0.95 ? 'add' : 'remove']('scrollable-right');\n\t// \t\telm.classList[0.05 < r ? 'add' : 'remove']('scrollable-left');\n\t// \t} else {\n\t// \t\telm.classList.remove('scrollable-right');\n\t// \t\telm.classList.remove('scrollable-left');\n\t// \t}\n\t// }\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\t// function addHoverStateEventListener(items, clsCurrent, clsHover) {\n\t// \tconst enter = (e) => {\n\t// \t\tif (e.pointerType === 'mouse' && !e.target.classList.contains(clsCurrent)) {\n\t// \t\t\te.target.classList.add(clsHover);\n\t// \t\t}\n\t// \t}\n\t// \tconst leave = (e) => {\n\t// \t\tif (e.pointerType === 'mouse' && !e.target.classList.contains(clsCurrent)) {\n\t// \t\t\te.target.classList.remove(clsHover);\n\t// \t\t}\n\t// \t}\n\t// \tfor (const it of items) {\n\t// \t\tit.addEventListener('pointerenter', enter);\n\t// \t\tit.addEventListener('pointerleave', leave);\n\t// \t}\n\t// }\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\twindow.addEventListener('resize', () => { for (const l of resizeListeners) l(); }, { passive: true });\n\t\twindow.addEventListener('scroll', () => { for (const l of scrollListeners) l(); }, { passive: true });\n\t\t// initializeScrollableDetection();\n\t});\n\t\n\tfunction throttle(fn) {\n\t\tlet isRunning;\n\t\tfunction run() {\n\t\t\tisRunning = false;\n\t\t\tfn();\n\t\t}\n\t\treturn () => {\n\t\t\tif (isRunning) return;\n\t\t\tisRunning = true;\n\t\t\trequestAnimationFrame(run);\n\t\t};\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction getWpAdminBarHeight() {\n\t\tconst e = document.getElementById('wpadminbar');\n\t\treturn (e && getComputedStyle(e).position === 'fixed') ? e.offsetHeight : 0;\n\t}\n\t\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\telm    = document.getElementsByClassName(CLS_ELM)[0];\n\t\telmTop = document.getElementsByClassName(CLS_ELM_TOP)[0];\n\t\tif (!elm || !elmTop) return;\n\n\t\tonResize(onResizeHandler, true);\n\t\tonScroll(update, true);\n\t});\n\n\tfunction onResizeHandler() {\n\t\tsetEnabled(isStickable());\n\t\tif (isEnabled) {\n\t\t\tadjustFloating();\n\t\t\tupdate();\n\t\t}\n\t}\n\n\tfunction setEnabled(flag) {\n\t\tif (flag === isEnabled) return;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_STICKY);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_STICKY, CLS_FLOATING);\n\t\t\telm.style.top = null;\n\t\t}\n\t\tisEnabled = flag;\n\t}\n\n\tfunction adjustFloating() {\n\t\tconst top = getWpAdminBarHeight() - relativeOffsetTop(elm, elmTop);\n\t\telm.style.top = top + 'px';\n\t}\n\n\tfunction update() {\n\t\tif (!isEnabled) return;\n\t\tconst top = Math.floor(elmTop.getBoundingClientRect().top);\n\t\tsetFloating(top <= getWpAdminBarHeight());\n\t}\n\n\tfunction setFloating(flag) {\n\t\tif (elm.classList.contains(CLS_FLOATING) === flag) return;\n\t\tif (flag) {\n\t\t\telm.classList.add(CLS_FLOATING);\n\t\t} else {\n\t\t\telm.classList.remove(CLS_FLOATING);\n\t\t}\n\t}\n\n\n\t// Common ------------------------------------------------------------------\n\n\n\tfunction relativeOffsetTop(ancestor, target) {\n\t\treturn target.getBoundingClientRect().top - ancestor.getBoundingClientRect().top;\n\t}\n\n\tfunction isStickable() {\n\t\tif (window.innerWidth < minWindowWidth) return false;\n\t\tif (window.innerHeight * maxHeaderHeightRate < elmTop.clientHeight) return false;\n\t\treturn true;\n\t}\n\n};\n"]}